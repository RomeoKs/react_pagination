{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","totalPages","handleChangePage","onChangePage","currentPage","pageSelectors","className","href","map","pageSelector","classNames","active","onClick","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","total","totalPageSelectors","Math","ceil","firstItemIndex","lastItemIndex","currentItems","slice","id","value","onChange","event","parseInt","currentTarget","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,WACcC,EAEV,EAFJC,aACAC,EACI,EADJA,YAEMC,EAAgBX,EAAW,EAAGO,GAEpC,OACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAU,qBAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,OAJhB,oBASDF,EAAcG,KAAI,SAAAC,GAAY,OAC7B,oBACEH,UACEI,IAAW,YAAa,CACtBC,OAAQF,IAAiBL,IAH/B,SAQE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAI,WAAME,GACVG,QAAS,kBAAMV,EAAiBO,IAJlC,SAMGA,KAREA,MAlBX,IA+BE,oBAAIH,UAAU,YAAd,SACE,mBACE,UAAQ,WACRA,UAAU,YACVC,KAAK,QACL,gBAAc,QAJhB,wBC5CKM,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOV,EAAP,KAAoBa,EAApB,KACA,EAAgBH,mBAAS,IAAlBI,EAAP,oBAEMC,EAAqBC,KAAKC,KAAKH,EAAQH,GAYvCO,EAAiBlB,EAAcW,EAAeA,EAC9CQ,EAAgBnB,EAAcW,GAAgBG,EAChDd,EAAcW,EACdG,EAEEM,EAPQ9B,EAAW,EAAGwB,GAAOV,KAAI,SAAAV,GAAC,qBAAYA,MAOzB2B,MAAMH,EAAgBC,GAEjD,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wCAIA,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAOZ,EACPa,SAhCiB,SAACC,GAC1Bb,EAAgBc,SAASD,EAAME,cAAcJ,MAAO,MA0B9C,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,6BACGkB,EAAahB,KAAI,SAACyB,GAAD,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,QAOX,cAAC,EAAD,CACEhC,WAAYkB,EACZhB,aAvDe,SAACM,GACpBQ,EAAeR,IAuDXL,YAAaA,QCrErB8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.35ed67f3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  totalPages: number;\n  onChangePage: (number: number) => void;\n  currentPage: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  totalPages,\n  onChangePage: handleChangePage,\n  currentPage,\n}) => {\n  const pageSelectors = getNumbers(1, totalPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li className=\"page-item disabled\">\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled=\"true\"\n        >\n          «\n        </a>\n      </li>\n      {pageSelectors.map(pageSelector => (\n        <li\n          className={\n            classNames('page-item', {\n              active: pageSelector === currentPage,\n            })\n          }\n          key={pageSelector}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageSelector}`}\n            onClick={() => handleChangePage(pageSelector)}\n          >\n            {pageSelector}\n          </a>\n        </li>\n      ))}\n      ;\n      <li className=\"page-item\">\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled=\"false\"\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(42);\n\n  const totalPageSelectors = Math.ceil(total / itemsPerPage);\n\n  const handleItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(parseInt(event.currentTarget.value, 10));\n  };\n\n  const onChangePage = (pageSelector: number) => {\n    setCurrentPage(pageSelector);\n  };\n\n  const items = getNumbers(1, total).map(n => `Item ${n}`);\n\n  const firstItemIndex = currentPage * itemsPerPage - itemsPerPage;\n  const lastItemIndex = currentPage * itemsPerPage <= total\n    ? currentPage * itemsPerPage\n    : total;\n\n  const currentItems = items.slice(firstItemIndex, lastItemIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page 1 (items 1 - 5 of 42)\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <ul>\n        {currentItems.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n\n      <Pagination\n        totalPages={totalPageSelectors}\n        onChangePage={onChangePage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}