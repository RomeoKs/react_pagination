{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","handleChangePage","onPageChange","currentPage","perPage","totalPageSelectors","Math","ceil","pageSelectors","isFirstPage","isLastPage","isPrevEnabled","isNextEnabled","className","classNames","disabled","href","onClick","map","pageSelector","active","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","firstItemIndex","lastItemIndex","currentItems","slice","id","value","onChange","event","parseInt","currentTarget","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACcC,EAGV,EAHJC,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,QAEMC,EAAqBC,KAAKC,KAAKP,EAAQI,GACvCI,EAAgBf,EAAW,EAAGY,GAE9BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAE7BM,EAAgBR,EAAc,EAC9BS,GAAiBF,EAEvB,OACE,qBAAIG,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YACpB,CACEC,UAAWJ,IAHjB,SAME,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAOR,GAAeR,EAAiBE,EAAc,IALhE,oBAUDK,EAAcU,KAAI,SAAAC,GAAY,OAC7B,oBACEN,UACEC,IAAW,YAAa,CACtBM,OAAQD,IAAiBhB,IAH/B,SAQE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMhB,EAAiBkB,IAJlC,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,UAAWH,IAFf,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,iBAAgBJ,EAChBK,QAAS,kBAAOP,GAAcT,EAAiBE,EAAc,IAL/D,wBC9DKkB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOnB,EAAP,KAAoBsB,EAApB,KACA,EAAgBH,mBAAS,IAAlBtB,EAAP,oBAaM0B,EAAiBvB,EAAcoB,EAAeA,EAC9CI,EAAgBxB,EAAcoB,GAAgBvB,EAChDG,EAAcoB,EACdvB,EAEE4B,EAPQnC,EAAW,EAAGO,GAAOkB,KAAI,SAAArB,GAAC,qBAAYA,MAOzBgC,MAAMH,EAAgBC,GAEjD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiCuB,EAAiB,EADlD,cACyDC,EADzD,aAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOR,EACPS,SAjCiB,SAACC,GAC1BT,EAAgBU,SAASD,EAAME,cAAcJ,MAAO,KACpDN,EAAe,IA0BT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,6BACGe,EAAaV,KAAI,SAACmB,GAAD,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,QAOX,cAAC,EAAD,CACErC,MAAOA,EACPI,QAASmB,EACTrB,aAxDe,SAACiB,GACpBM,EAAeN,IAwDXhB,YAAaA,QCrErBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cf480ef3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  onPageChange: (number: number) => void;\n  currentPage: number;\n  perPage: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  onPageChange: handleChangePage,\n  currentPage,\n  perPage,\n}) => {\n  const totalPageSelectors = Math.ceil(total / perPage);\n  const pageSelectors = getNumbers(1, totalPageSelectors);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPageSelectors;\n\n  const isPrevEnabled = currentPage > 1;\n  const isNextEnabled = !isLastPage;\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item',\n          {\n            disabled: !isPrevEnabled,\n          })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPrevEnabled}\n          onClick={() => !isFirstPage && handleChangePage(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pageSelectors.map(pageSelector => (\n        <li\n          className={\n            classNames('page-item', {\n              active: pageSelector === currentPage,\n            })\n          }\n          key={pageSelector}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageSelector}`}\n            onClick={() => handleChangePage(pageSelector)}\n          >\n            {pageSelector}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: !isNextEnabled,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={!isNextEnabled}\n          onClick={() => !isLastPage && handleChangePage(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(42);\n\n  const handleItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(parseInt(event.currentTarget.value, 10));\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (pageSelector: number) => {\n    setCurrentPage(pageSelector);\n  };\n\n  const items = getNumbers(1, total).map(n => `Item ${n}`);\n\n  const firstItemIndex = currentPage * itemsPerPage - itemsPerPage;\n  const lastItemIndex = currentPage * itemsPerPage <= total\n    ? currentPage * itemsPerPage\n    : total;\n\n  const currentItems = items.slice(firstItemIndex, lastItemIndex);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemIndex + 1} - ${lastItemIndex} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <ul>\n        {currentItems.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        onPageChange={onPageChange}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}